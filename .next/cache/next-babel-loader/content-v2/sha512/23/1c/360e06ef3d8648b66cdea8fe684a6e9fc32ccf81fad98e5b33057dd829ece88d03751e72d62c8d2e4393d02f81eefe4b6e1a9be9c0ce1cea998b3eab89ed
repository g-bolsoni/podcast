{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      togglePlay = _usePlayer.togglePlay,\n      setIsPlayingState = _usePlayer.setIsPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious,\n      isLooping = _usePlayer.isLooping,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      isShuffling = _usePlayer.isShuffling,\n      clearPlayerState = _usePlayer.clearPlayerState;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    {\n      hasNext ? playNext() : clearPlayerState();\n    }\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxs(\"header\", {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Listen now\"\n      }), /*#__PURE__*/_jsx(\"strong\", {\n        children: \" Tocando agora \"\n      })]\n    }), episode ? /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsx(Image, {\n        src: episode.thumbnail,\n        height: 592,\n        width: 592,\n        objectFit: \"cover\",\n        alt: \"\"\n      }), /*#__PURE__*/_jsxs(\"strong\", {\n        children: [\" \", episode.title, \" \"]\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        children: [\" \", episode.members, \" \"]\n      })]\n    }) : /*#__PURE__*/_jsx(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsx(\"strong\", {\n        children: \" Selecione um podcast para ouvir \"\n      })\n    }), /*#__PURE__*/_jsxs(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsx(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }) : /*#__PURE__*/_jsx(\"div\", {\n            className: styles.emptySlider\n          })\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        })]\n      }), episode && /*#__PURE__*/_jsx(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        loop: isLooping,\n        onEnded: handleEpisodeEnded,\n        onLoadedMetadata: setupProgressListener,\n        onPlay: function onPlay() {\n          return setIsPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setIsPlayingState(false);\n        }\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasPrevious,\n          onClick: playPrevious,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsx(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Pausar\"\n          }) : /*#__PURE__*/_jsx(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar \"\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasNext,\n          onClick: playNext,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar proxima \"\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}