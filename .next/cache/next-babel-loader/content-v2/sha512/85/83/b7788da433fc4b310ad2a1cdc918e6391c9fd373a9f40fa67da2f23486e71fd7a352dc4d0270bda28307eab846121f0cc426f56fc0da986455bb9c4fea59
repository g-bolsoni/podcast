{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './episode.module.scss';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play; // HTML\n\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: episode.title\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"voltar\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: \"/play.svg\",\n          alt: \"tocar Epis\\xF3dio\"\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"header\", {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: episode.title\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        children: [episode.members, \" \"]\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        children: [episode.publishedAt, \" \"]\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        children: [episode.durationAsString, \" \"]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    })]\n  });\n}\n/*\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return {\n      paths: [],\n      fallback: 'blocking',\n    };\n  };\n  \n   export const getStaticProps: GetStaticProps = async ctx => {\n    const { slug } = ctx.params;\n  \n    const { data } = await api.get(`/episodes/${slug}`);\n  \n    const episode = {\n      ...data,\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n        locale: ptBR,\n      }),\n      durationAsString: convertDurationToTimeString(data.file.duration),\n    };\n  \n    return {\n      props: {\n        episode,\n      },\n      revalidate: 60 * 60 * 24,\n    };\n  };\n*/\n///*\n// Função para deixar a tela dinamica\n//*/","map":null,"metadata":{},"sourceType":"module"}